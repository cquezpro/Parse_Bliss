
//DEPLOY CODE - Needed to get around security restrictions with inline js, unfortunately

Parse.initialize(Bliss.appId, Bliss.javascriptId);
$(document).ready(function() {
  //Check internet connection - if not available, display offline message
  if (!(navigator.onLine) && !Bliss.ignoreOffline) {
    $('.connection-status').fadeIn();
    $('.connection-status a').click(function(e) {
      e.preventDefault();
      location.reload();
    });
  }
  else {
    User(function(user) {
      var no_registration_form = false;
      if (user == false || typeof user == 'undefined') {
        var form = new LoginForm();
        form.onComplete(deploy);
        form.deploy();
        return;
      }
      else if (!user.get('manually_created')) {
        //If account was not manually created (created by the user as opposed to autogenerated by Bliss)
        //Run a split test forcing account creation
        var force_registration = new SplitTest('force-registration').truefalse();
        if (force_registration) {
          var form = new CreateAccountForm();
          form.onComplete(deploy);
          form.deploy();
          return;
        }
        else {
          no_registration_form = true;
        }
      }
      //If user was manually created (user has registered), always deploy
      else {
        no_registration_form = true;
      }
      if (no_registration_form) {
        if (Bliss.getUrlParam('install')) {
          Bliss.message('You\'ve unlocked your first exercise');
        }
        deploy();
      }
    });
  }
});

function deploy() {
    var iframeId  = Bliss.getUrlParam('iframe');
    //Compile slides to be presented to the user
    var exercises = Bliss.getUrlParam('exercise').split(',');
    var slides = [];
    $.each(exercises, function(key, exercise) {
      try {
        if (typeof window[exercise] == 'undefined') {
          throw new Error(exercise + ' is not a defined exercise');
        }
        var slide = {SlideClass: window[exercise]};
        slides.push(slide);
      }
      catch (error) {
        Bliss.logError(error, 'deploy');
        alert('Error: '+ error.message);
      }
    });
    //Rating request for Chrome Webstore
    if (Bliss.getEnvironment() == 'extension') {
      //Make sure the following views are not in currently deployed views
      if ($(exercises).not(['LoginForm', 'CreateAccountForm', 'FeedbackForm']).get().length == exercises.length) {
        var exercise_count = Storage.get('exercises_submitted');
        exercise_count = exercise_count ? Number(exercise_count) : 0;
        var has_reviewed = Storage.get('review_clicked');
        if (!has_reviewed && $.inArray(exercise_count, [2, 5, 11, 17]) != -1) {
          slides.push({SlideClass: window['ReviewRequestForm']});
        }
      }
    }
    var presenter = new Presenter({slides: slides});
    //Handle behavior after all slides have been presented
    presenter.complete = function(){
      Storage.reload(function() {
        var challenge_status = Storage.get('7_day_challenge');
        var use_day_count    = Storage.get('use_day_count');
        var congrats_shown   = Storage.get('7_day_challenge_congrats_shown');
        if (challenge_status == 'complete' && !congrats_shown) {
          Bliss.logEvent('7_day_challenge_complete');
          Storage.set('7_day_challenge_congrats_shown', true);
          var challenge = new SevenDayChallenge();
          challenge.templates = ['SevenDayChallengeCongrats.tpl.htm']
          challenge.deploy();
          return;
        }
        var trainer = new Trainer();
        trainer.onLoad(function(){
          var exercises = trainer.getScheduledExercises();
          //If we have more scheduled exercises, redirect so user can complete them
          if (!$.isEmptyObject(exercises)) {
            var exercise_list = [];
            $.each(exercises, function(key, exercise) {
              exercise_list.push(exercise['dataClass']);
            });
            exercise_sequence_list = exercise_list.join(',');
            setTimeout(function() {
              document.location.href = Bliss.getLocalUrl('/ui/deploy/deploy.htm?exercise=' + exercise_sequence_list);
            }, 2000);
          }
          else {
            // Close current tab
            if (chrome && chrome.tabs && !Bliss.getUrlParam('noclose')) {
              chrome.tabs.getCurrent(function(tab) {
                setTimeout(function() {
                  chrome.tabs.remove(tab.id, function() {});
                }, 2500)
              });
            }
          }
        });            
      
        if (iframeId && chrome && chrome.storage) {
          setTimeout(function() {
            obj = {};
            obj['remove_iframe_view_'+ iframeId] = 1;
            Storage.wrapper.set(obj);
          }, 2500);
        }

        if (Bliss.getUrlParam('install')) {
          Bliss.message('Your next exercise is scheduled for tomorrow');
        }

      }); 
    }

    presenter.nextSlide();

}


